name: Build and Obfuscate BPB Panel
on:
  push:
    branches:
      - main
  schedule:
    # 每天凌晨1:00运行
    - cron: "0 1 * * *"
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 检出当前仓库代码
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 设置 Node.js 环境
        uses: actions/setup-node@v4
        with:
          node-version: "latest"
          
      - name: 安装全局依赖项
        run: |
          npm install -g javascript-obfuscator
          
      - name: 检出 BPB 源码到临时目录
        run: |
          git clone https://github.com/bia-pain-bache/BPB-Worker-Panel.git bpb-source
          
      - name: 构建 BPB worker.js
        run: |
          cd bpb-source
          npm install
          npm run build
          
      - name: 调试：查看构建后的文件结构
        run: |
          echo "=== BPB 源码目录结构 ==="
          ls -la bpb-source/
          echo "=== 查找所有 .js 文件 ==="
          find bpb-source/ -name "*.js" -type f
          echo "=== 查找包含 worker 的文件 ==="
          find bpb-source/ -name "*worker*" -type f
          echo "=== 查找 build 目录 ==="
          find bpb-source/ -name "build" -type d
          if [ -d "bpb-source/build" ]; then
            echo "=== build 目录内容 ==="
            ls -la bpb-source/build/
          fi
          
      - name: 复制构建文件
        run: |
          # 尝试多个可能的路径
          if [ -f "bpb-source/build/unobfuscated-worker.js" ]; then
            cp bpb-source/build/unobfuscated-worker.js origin.js
            echo "找到文件：bpb-source/build/unobfuscated-worker.js"
          elif [ -f "bpb-source/dist/unobfuscated-worker.js" ]; then
            cp bpb-source/dist/unobfuscated-worker.js origin.js
            echo "找到文件：bpb-source/dist/unobfuscated-worker.js"
          elif [ -f "bpb-source/_worker.js" ]; then
            cp bpb-source/_worker.js origin.js
            echo "找到文件：bpb-source/_worker.js"
          elif [ -f "bpb-source/src/worker.js" ]; then
            cp bpb-source/src/worker.js origin.js
            echo "找到文件：bpb-source/src/worker.js"
          else
            echo "错误：找不到构建后的 worker 文件"
            echo "尝试查找任何包含 worker 的 .js 文件："
            find bpb-source/ -name "*worker*.js" -type f
            exit 1
          fi
          
      - name: 清理临时目录
        run: |
          rm -rf bpb-source
          
      - name: 检查文件是否存在
        run: |
          if [ ! -f origin.js ]; then
            echo "错误：origin.js 文件不存在"
            exit 1
          fi
          echo "文件大小: $(wc -c < origin.js) bytes"
          
      - name: 混淆 BPB worker.js
        run: |
          javascript-obfuscator origin.js --output _worker.js \
            --compact true \
            --control-flow-flattening false \
            --dead-code-injection false \
            --identifier-names-generator mangled \
            --rename-globals false \
            --string-array true \
            --string-array-encoding 'rc4' \
            --string-array-threshold 0.75 \
            --transform-object-keys true \
            --unicode-escape-sequence true
            
      - name: 验证混淆结果
        run: |
          if [ ! -f _worker.js ]; then
            echo "错误：混淆失败，_worker.js 文件不存在"
            exit 1
          fi
          echo "混淆后文件大小: $(wc -c < _worker.js) bytes"
          
      - name: 清理中间文件
        run: |
          rm -f origin.js
          
      - name: 提交更改
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          branch: main
          commit_message: ':arrow_up: 更新最新的 BPB 面板'
          commit_author: 'github-actions[bot] <github-actions[bot]@users.noreply.github.com>'
          push_options: '--set-upstream'
